package com.example.my.frvisafrbot.filter;

import lombok.val;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.Map;

import static com.example.my.frvisafrbot.constant.Constant.NEW_LINE;
import static com.example.my.frvisafrbot.constant.Constant.STAR;

public class FilterMessageTest {

    private final String INPUT_MESSAGE_OK = "\uD83D\uDD14 –°–ê–ù–ö–¢-–ü–ï–¢–ï–†–ë–£–†–ì\n" +
            NEW_LINE +
            "\uD83D\uDFE2 Short Stay All kind of other short stay visas\n" +
            NEW_LINE +
            "–ë–ª–∏–∂–∞–π—à–∞—è –¥–∞—Ç–∞: 14 –∞–ø—Ä–µ–ª—è 2023 –≥.\n" +
            NEW_LINE +
            "–ó–ê–ü–ò–°–ê–¢–¨–°–Ø –ù–ê –°–ê–ô–¢–ï VFS\n" +
            " (https://www.vfsvisaservicesrussia.com/Global-Appointment/Account/RegisteredLogin?q=shSA0YnE4pLF9Xzwon/x/BGxVUxGuaZP3eMAtGHiEL0kQAXm+Lc2PfVNUJtzf7vWRu19bwvTWMZ48njgDU5r4g==)–ü–û–õ–ï–ó–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø\n" +
            " (https://t.me/vfs_france/1814)–û–¢–ü–†–ê–í–ò–¢–¨ –î–û–ù–ê–¢\uD83D\uDC4D\n" +
            NEW_LINE +
            " (https://pay.mysbertips.ru/06030299)Telegram\n" +
            " (https://t.me/vfs_france/1814)–ë–æ—Ç –∑–∞–ø–∏—Å–∏ –Ω–∞ –≤–∏–∑—É –§—Ä–∞–Ω—Ü–∏–∏ (VFS France Monitoring)\n" +
            "–î—Ä—É–∑—å—è, –≤—Å–µ–º –ø—Ä–∏–≤–µ—Ç! \uD83D\uDC4B \n" +
            "–°–æ–±—Ä–∞–ª –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ –≤—Å—é –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∫–∞–Ω–∞–ª–∞ @vfs_france";
    private final String EXPECTED_RESULT_OK = "*–°–ê–ù–ö–¢-–ü–ï–¢–ï–†–ë–£–†–ì*\n" +
            "*Short* Stay All kind of other short stay visas\n" +
            "–ë–ª–∏–∂–∞–π—à–∞—è –¥–∞—Ç–∞: 14 –∞–ø—Ä–µ–ª—è 2023 –≥.\n" +
            "[–ó–ê–ü–ò–°–ê–¢–¨–°–Ø –ù–ê –°–ê–ô–¢–ï VFS](https://www.vfsvisaservicesrussia.com/Global-Appointment/Account/RegisteredLogin?q=shSA0YnE4pLF9Xzwon/x/BGxVUxGuaZP3eMAtGHiEL0kQAXm+Lc2PfVNUJtzf7vWRu19bwvTWMZ48njgDU5r4g)";


    private final String INPUT_MESSAGE_ERROR = "‚ö†Ô∏è –î—Ä—É–∑—å—è VFS –ø–æ–º–µ–Ω—è–ª —Å–∞–π—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏. –ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ\n" +
            "https://visa.vfsglobal.com/rus/en/fra/login\n" +
            NEW_LINE +
            "–ù–æ–≤—ã–π —Å–∞–π—Ç —Ç—Ä–µ–±—É–µ—Ç –æ–ø–ª–∞—Ç—É —Å–±–æ—Ä–∞ –≤–∏–∑–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ –≤ –º–æ–º–µ–Ω—Ç –∑–∞–ø–∏—Å–∏. \n" +
            NEW_LINE +
            "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–∞ –Ω–æ–≤–æ–º —Å–∞–π—Ç–µ –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –Ω–∞—á–∞—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.";


    @Test
    public void getPrepareMessageTest() {
        Assertions.assertEquals(EXPECTED_RESULT_OK, getPrepareMessage(INPUT_MESSAGE_OK));
        Assertions.assertNull(getPrepareMessage(INPUT_MESSAGE_ERROR));
    }

    private String getPrepareMessage(String message) {
        if (checkMessageContent(message) == null) {
            return null;
        }
        val result = new StringBuilder();
        val tmp = new StringBuilder();
        try {
            val excludeSimbol = Arrays.asList("üîî", "üü¢", "‚ö†Ô∏è");
            val replaceSimbol = Map.of(NEW_LINE + NEW_LINE, NEW_LINE, "Short", STAR + "Short" + STAR);
            val whiteList = Arrays.asList("Short", "–ë–ª–∏–∂–∞–π—à–∞—è –¥–∞—Ç–∞");

            //–ó–∞–º–µ–Ω—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω–æ–µ
            for (Map.Entry<String, String> entry : replaceSimbol.entrySet()) {
                message = message.replace(entry.getKey(), entry.getValue());
            }
            tmp.append(message);
            //–£–¥–∞–ª—è–µ–º –Ω–µ–Ω—É–∂–Ω–æ–µ
            for (String exclude : excludeSimbol) {
                int indexStart = tmp.indexOf(exclude);
                if (indexStart == -1) {
                    continue;
                }
                tmp.delete(indexStart, indexStart + exclude.length() + 1);
            }
            val lines = tmp.toString().split(NEW_LINE);
            boolean isFirst = true;
            for (String line : lines) {
                if (isFirst) {
                    result.append(STAR).append(line).append(STAR).append(NEW_LINE);
                    isFirst = false;
                }
                for (String whiteListWord : whiteList) {
                    if (line.contains(whiteListWord)) {
                        result.append(line).append(NEW_LINE);
                    }
                }
            }
            result.append("[–ó–ê–ü–ò–°–ê–¢–¨–°–Ø –ù–ê –°–ê–ô–¢–ï VFS](https://www.vfsvisaservicesrussia.com/Global-Appointment/Account/RegisteredLogin?q=shSA0YnE4pLF9Xzwon/x/BGxVUxGuaZP3eMAtGHiEL0kQAXm+Lc2PfVNUJtzf7vWRu19bwvTWMZ48njgDU5r4g)");
        } catch (Exception ex) {
            int x = 0;
        }
        return result.toString();
    }

    private String checkMessageContent(String message) {
        val whiteList = Arrays.asList("Short", "–ë–ª–∏–∂–∞–π—à–∞—è –¥–∞—Ç–∞");
        //–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
        for (String whiteListWord : whiteList) {
            if (message.indexOf(whiteListWord) == -1) {
                return null;
            }
        }
        return message;
    }

}
